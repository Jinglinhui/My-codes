CREATE TABLE order_products_prior WITH (external_location = 's3://imba-jinglinhui/features/order_products_prior/', format = 'parquet') as

select order_new.*,order_product_new.product_id,order_product_new.reordered,order_product_new.add_to_cart_order
from order_new 
left join order_product_new
on order_new.order_id=order_product_new.order_id
where eval_set='Prior';

CREATE TABLE user_feature_1 WITH (external_location = 's3://imba-jinglinhui/features/user_features_1/', format = 'parquet') as
select user_id,max(order_number) as max_order_number,sum(days_since_prior_order) as sum_of_days_since_prior_order,avg(days_since_prior_order) as average_days_since_prior_order
from order_new
group by user_id;

CREATE TABLE user_features_2 WITH (external_location = 's3://imba-jinglinhui/features/user_features_2/', format = 'parquet') as
select user_id,count(product_id) as total_products,count(distinct product_id) as total_distinct_product,sum(case when reordered=1 then 1 else 0 end)/cast(sum(case when order_number>1 then 1 else 0 end) as double) as user_reorder_ratio
from order_products_prior
group by user_id;

CREATE TABLE up_features WITH (external_location = 's3://imba-jinglinhui/features/up_featutres/', format = 'parquet') as
select user_id,product_id,count(distinct order_id)as total_orders,max(order_number) as latest_order,min(order_number) as first_order,avg(add_to_cart_order) as average_cart_order
from order_products_prior
group by user_id,product_id;

CREATE TABLE prd_features WITH (external_location = 's3://imba-jinglinhui/features/prd_features/', format = 'parquet') as
select user_id,product_id,count(reordered) as total_reordered,sum(reordered) as sum_reordered,Sum(CASE WHEN product_seq_time = 1 THEN 1 ELSE 0 END) as rank_1,Sum(CASE WHEN product_seq_time = 2 THEN 1 ELSE 0 END) as rank_2
from (SELECT user_id,product_id,reordered,rank() OVER (PARTITION BY user_id,product_id ORDER BY order_number) as product_seq_time
      from order_products_prior)
group by user_id,product_id;